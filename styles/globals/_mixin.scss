@mixin p-base(
  $which: before,
  $top: 0,
  $left: 0,
  $content: "",
  $position: absolute,
  $width: 100%,
  $height: 100%,
  $display: block
) {
  &::#{$which} {
    display: $display;
    content: $content;
    position: $position;
    top: $top;
    left: $left;
    width: $width;
    height: $height;
    @content;
  }
}

// /////////////////////////////////////////////////
// Media Querry
//
// ブレークポイントをmapに格納する。
// !default は、
// 外部ですでに $breakpoints が定義されていた場合は
// その既存の値を優先し、未定義であればこのデフォルト値が
// 使われるようになると云う意味。
// メディアクエリの切替る値を外部で設定することもないだろうから
// 本来はいらないです。
$breakpoints: (
  // 480px以上(スマホの横向き)のモニタで適用
  'sm': 'screen and (min-width: 480px)',
  // 768px以上のタブレットやモニタで適用
  'md': 'screen and (min-width: 768px)',
  // 1024px以上のモニタで適用
  'lg': 'screen and (min-width: 1024px)',
  // 1471px以上のモニタで適用
  'xl': 'screen and (min-width: 1471px)',
) !default;

// mixinの宣言している。
//    下の式を例にすると、
//    mq()関数に、$breakpointに『sm』を渡し、
//    インターポレーションで変数を展開します。
//    この場合、map-get()関数は、
//    $breakpointsと$breakpointを引数に取り、
//    『screen and (min-width: 480px)』と云う値を返します。
//    CSSの記述では、
//    @media screen and (min-width: 480px) {}
//    となります。
//    そして、この値にCSSで設定した値『@content;』が入ります。

@mixin mq($breakpoint: sm) {
  @media #{map-get($breakpoints, $breakpoint)} {
    @content;
  }
}

// /////////////////////////////////////////////////
// Animation属性
//
@mixin animation(
  $name,

  // animation-duration
  //    1回のアニメーション周期が完了するまでの再生時間。
  $duration: 1s,

  // animation-timing-function（詳細のパラメータは下記）
  //    アニメーションがそれぞれの周期の中でどのように進行するかを設定。
  $timing-function: ease,

  // animation-delay
  //    アニメーションをいつ開始するかを指定。  
  $delay: 0s,

  // animation-iteration-count（詳細のパラメータは下記）
  //    停止するまでにアニメーション周期が再生される回数を指定。  
  $iteration-count: 1,

  // animation-direction（詳細のパラメータは下記）
  //    アニメーション再生の向きを順方向、逆方向、前後反転のいずれにするかを設定。  
  $direction: normal,

  // animation-fill-mode（詳細のパラメータは下記）
  //    アニメーションの開始と終了時の状態を指定。  
  $fill-mode: forwards
) {
  animation: {
    name: $name;
    duration: $duration;
    timing-function: $timing-function;
    delay: $delay;
    iteration-count: $iteration-count;
    direction: $direction;
    fill-mode: $fill-mode;
  }
}

// // animation-timing-function params
//
//   リニア（linear）
//        等速で変化する。のっぺりとした安定した印象。
//   イーズイン（ease-in）
//        徐々に加速する。加速するような勢いのある印象。
//   イーズアウト（ease-out）
//        徐々に減速する。変化の余韻が残りやすい印象。
//   イーズインアウト（ease-in-out）
//        加速してから減速。

// // animation-iteration-count params
//
// 無限に繰り返す　infinite;

// // animation-direction params
//
// normal             
//    => アニメーションを毎回順方向に再生します。
//       アニメーション周期ごとに、アニメーションを最初の状態にリセットして
//       そこからまた始めます。
// reverse            
//    => アニメーションを毎回逆方向に再生します
//       言い換えれば、アニメーション周期ごとに、アニメーションを最後の状態にリセットして
//       そこからまた始めます。アニメーションを逆方向に実行し、イージング関数も逆になります。
//       例えば、イージング関数の ease-in が ease-out になります。
// alternate          
//    => アニメーションを毎回反転させ、初回は順方向になります。
//       周期が偶数か奇数かを特定する回数は1から始まります。
// alternate-reverse  
//    => アニメーションを毎回反転させ、初回は逆方向になります。
//       周期が偶数か奇数かを特定する回数は1から始まります。

// // animation-fill-mode params
//
// none      => 指定なし。初期値。
// forwards  => 元の状態に戻らずアニメーション最後の状態を維持。
// backwards => アニメーションの最初の状態に戻る。
// both      => backwardsとforwardsの両方の状態を適用。


// /////////////////////////////////////////////////
// Background属性
//
@mixin bg(
  // 背景色
  $color: unset,
  // 配置するイメージまでのパス。
  $image: "",
  // イメージの配置位置（詳細のパラメータは下記）。
  $position: center,
  // イメージの領域に対するサイズ（詳細のパラメータは下記）。
  $size: cover,
  // 画像の繰り返し（詳細のパラメータは下記）。
  $repeat: no-repeat,
  // イメージの領域に対してスクロールに追従するか否か。
  //    追従する => 『scroll』、背景を固定する => 『fixed』
  $attachment: scroll,
  // 背景の描画領域を定める。テキスト・カラー属性への値の付与は必須。
  $clip: border-box,
  $txt-color: inherit
) {
  background: {
    color: $color;
    image: url("#{$image}");
    size: $size;
    position: $position;
    repeat: $repeat;
    attachment: $attachment;
    clip: $clip;
  }
  color: $txt-color;
}

// // background-position params
//
// top left       top 0% left 0%（right 100%）=== left 0%
// top            top 0% left 50%（right 50%）
// top right      top 0% left 100%（right 0%）=== right 0%

// left           top 50% left 0%（right 100%）=== left 50%
// center         50%
// right          top 50% left 100%（right 0%）=== right 50%

// bottom left    bottom 0% left 0%（right 100%）=== left 100%
// bottom         bottom 0% left 50%（right 50%）
// bottom right   bottom 0% left 0%（right 100%）=== right 100%

// // background-size params
//
// cover   => 画像の縦横比を崩さずに、可能な限り要素いっぱいに拡大して表示する。
// contain => 画像全体を表示させ、かつ、縦横比を変えずにできるだけ大きく表示させる。
// auto    => 縦横比を維持して拡大縮小する。

// // background-repeat params
//
// repeat    => 要素いっぱいに背景画像が繰り返される。
// no-repeat => 背景画像が１つのみで繰り返さない。
// repeat-x  => 背景が横方向にのみ繰り返す。
// repeat-y  => 背景が縦方向にのみ繰り返す。

// // background-clip params
//
// border-box  => borderの外枠までを含めた範囲。
// padding-box => paddingの外側までを含めた範囲。
// content-box => paddingの内側の範囲。
// text        => テキストをクリッピングマスクにする。
//                ただし、テキストは『color: transparent』が必須。
